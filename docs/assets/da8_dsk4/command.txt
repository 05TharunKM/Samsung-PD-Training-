///////////////////////////////////////1111111111111111/////////////////////////
foreach_in_collection my_port [get_ports *] { 
 set my_port_name [get_object_name $my_port];
 echo $my_port_name;
}

rst
clk
IN_A
IN_B
OUT_Y
out_clk

///////////////////////////////////////////////////////////////////
foreach_in_collection my_port [get_ports *] {                      
       set my_port_name [get_object_name $my_port];                
       set dir [get_attribute [get_ports $my_port_name] direction];
       echo $my_port_name $dir;                                    
      }

rst in
clk in
IN_A in
IN_B in
OUT_Y out
out_clk out

///////////////////////////////////////////////////////////////////

foreach_in_collection my_cells [get_cells * -hier] {
set my_cell_name [get_object_name $my_cells];
set rname [get_attribute [get_cells $my_cell_name] ref_name];
echo $my_cell_name $rname;
}

REGA_reg sky130_fd_sc_hd__dfrtp_1
REGB_reg sky130_fd_sc_hd__dfrtp_1
REGC_reg sky130_fd_sc_hd__dfrtp_1
U9 sky130_fd_sc_hd__clkinv_1
U10 sky130_fd_sc_hd__clkinv_1
U11 sky130_fd_sc_hd__nor2_1
U12 sky130_fd_sc_hd__a21oi_1
U13 sky130_fd_sc_hd__clkinv_1
U14 sky130_fd_sc_hd__nand2_1

///////////////////////////////2222222222/////////////////////////////////////

foreach_in_collection my_pin [get_pins *] {  
set pin_name [get_object_name $my_pin]; 
set dir [get_attribute $pin_name direction];
echo $pin_name $dir;
}

REGA_reg/D in
REGA_reg/CLK in
REGA_reg/RESET_B in
REGA_reg/Q out
REGB_reg/D in
REGB_reg/CLK in
REGB_reg/RESET_B in
REGB_reg/Q out
REGC_reg/D in
REGC_reg/CLK in
REGC_reg/RESET_B in
REGC_reg/Q out
U9/A in
U9/Y out
U10/A in
U10/Y out
U11/A in
U11/B in
U11/Y out
U12/A1 in
U12/A2 in
U12/B1 in
U12/Y out
U13/A in
U13/Y out
U14/A in

////////////////////////////////////////////////////////////////////
dc_shell> foreach_in_collection my_pin [get_pins *] { 
set pin_name [get_object_name $my_pin];               
set dir [get_attribute $pin_name direction];          
if { [regexp $dir in ] } {                            
if { [get_attribute [get_pins $pin_name] clock] } {   
echo $pin_name;                                       
}                                                     
}                                                     
} 

REGA_reg/CLK
REGB_reg/CLK
REGC_reg/CLK
                                                    
///////////////////////////////333333333333333/////////////////////////////////////

dc_shell> create_clock -name MYClk -per 10 [get_ports clk]

////////////////////////////////////////////////////////////////////////

report_clocks *

Clock          Period   Waveform            Attrs     Sources
--------------------------------------------------------------------------------
MYClk           10.00   {0 5}                         {clk}
--------------------------------------------------------------------------------
1

////////////////////////////////////////////////////////////////////////

foreach_in_collection my_pin [get_pins *] {  
 set pin_name [get_object_name $my_pin];                
 set dir [get_attribute $pin_name direction];           
 if { [regexp $dir in ] } {                             
  if { [get_attribute [get_pins $pin_name] clock] } {  
   set clk [get_attribute [get_pins $pin_name] clocks];
   set clk_name [get_object_name $clk];  
   echo $pin_name $dir $clk_name;                                        
  }                                                      
 }                                                      
}                                                      

REGA_reg/CLK in MYClk
REGB_reg/CLK in MYClk
REGC_reg/CLK in MYClk

//////////////////////////////////////444444444444444444/////////////////////////////

set_clock_latency -source 2 [get_clocks MYClk]
set_clock_latency 1 [get_clocks MYClk]
set_clock_uncertainty -hold 0.1 [get_clocks MYClk]
set_clock_uncertainty -setup 0.5 [get_clocks MYClk]
report_timing -from REGB_reg/CLK -to REGC_reg/D -delay_type max  > timrep1 before1
report_timing -from REGA_reg/CLK -to REGC_reg/D -delay_type min  > timrep2 before2
 
//////////////////////////////////////55555555555/////////////////////////////////////

report_timing -from IN_A -transition_time -capacitance -nets > timrep_max
report_timing -from IN_A -transition_time -capacitance -nets > timrep_min

set_input_delay -max 5 -clock [get_clock MYCLK] [get_ports IN_A]
set_input_delay -max 5 -clock [get_clock MYCLK] [get_ports IN_B]
report_timing -from IN_A -transition_time -capacitance -nets -delay_type max > timrep1_max
report_timing -from IN_A -transition_time -capacitance -nets -delay_type min > timrep1_min

set_input_delay -min 1 -clock [get_clock MYClk] [get_ports IN_A]
set_input_delay -min 1 -clock [get_clock MYClk] [get_ports IN_B]
report_timing -from IN_A -transition_time -capacitance -nets -delay_type max > timrep2_max
report_timing -from IN_A -transition_time -capacitance -nets -delay_type min > timrep2_min

set_input_transition -max 0.3 [get_ports IN_A]
set_input_transition -max 0.3 [get_ports IN_B]
set_input_transition -min 0.1 [get_ports IN_B]
set_input_transition -min 0.1 [get_ports IN_A]
report_timing -from IN_A -transition_time -capacitance -nets -delay_type max > timrep3_max
report_timing -from IN_A -transition_time -capacitance -nets -delay_type min > timrep3_min

set_output_delay -max 5 -clock [get_clock MYClk] [get_ports OUT_Y]
set_output_delay -min 1 -clock [get_clock MYClk] [get_ports OUT_Y]
report_timing -to OUT_Y -transition_time -capacitance -nets -delay_type max > timrep4_max
report_timing -to OUT_Y -transition_time -capacitance -nets -delay_type min > timrep4_min

set_load -max 0.4 [get_ports OUT_Y]
set_load -min 0.1 [get_ports OUT_Y]
report_timing -to OUT_Y -transition_time -capacitance -nets -delay_type max > timrep5_max
report_timing -to OUT_Y -transition_time -capacitance -nets -delay_type min > timrep5_min

////////////////////////////////////DSK3 L2////////////////////////////////////////////////////

create_generated_clock -name MYGEN_Clk -master MYClk -source [get_ports clk] -div 1 [get_ports out_clk]
report_clocks > repclk
get_attribute [get_clocks MYGEN_Clk] is_generated

set_clock_latency -max 1 [get_clocks MYGEN_Clk]
set_output_delay -max 5  -clock [get_clocks MYGEN_Clk] [get_ports OUT_Y]
set_output_delay -min 1  -clock [get_clocks MYGEN_Clk] [get_ports OUT_Y]
report_timing -to OUT_Y -delay_type max > gen_timrep1_max 
report_timing -to OUT_Y -delay_type min > gen_timrep1_min 

create_generated_clock -name MYGEN_DIV_CLK -master MYCLK -source [get_ports clk] -div 2 [get_ports out_div_clk]; 

////////////////////////////DSK4.//////////////////////////////////////////////////////////////

all_inputs
{rst clk IN_A IN_B IN_C IN_D}

all_outputs
{OUT_Y out_clk out_div_clk OUT_Z}

all_registers
{REGC_reg REGA_reg REGB_reg out_div_clk_reg}

all_clocks
{MYCLK MYGEN_CLK MYGEN_DIV_CLK}

foreach_in_collection my_points [all_fanout -from IN_A] { 
set my_pnt_name [get_object_name $my_points]
set my_pins_ofcell [get_cells -of_object [get_pins $my_pnt_name]]
set my_cell_name [get_attribute my_pins_ofcell ref_name]
echo $my_pnt_name $my_pins_ofcell $my_cell_name

}

///////////////////////////////////////////////////////////////////////////////////////////////

set_max_delay 0.1 -from [all_inputs ] -to [get_port OUT_Z]
report_timing -to OUT_Z > timrep_max
compile_ultra 
report_timing -to OUT_Z > timrep1_max
write ddc and take schematic = l9_sch

///////////////////////////////////////////////////////////////////////////////////////////
//Virtaul clock 
create_clock -name MY_VClk -per 10 
reset_design 
read_verilog lab14_circuit.v 
link and compile_ultra 
source lab8_cons.tcl
report_clocks
create_clock -name MY_VClk -per 10 
set_input_delay -max 5 [get_ports IN_C] -clock [get_clocks MY_VClk]
set_input_delay -max 5 [get_ports IN_D] -clock [get_clocks MY_VClk]
set_output_delay -max 4.9 [get_ports OUT_Z] -clock [get_clocks MY_VClk]
report_timing -from IN_d -to OUT_Z  > timrep3_max_viol
compile_ultra 
report_timing -from IN_d -to OUT_Z  > timrep3_max_after




